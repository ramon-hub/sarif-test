    "description": "`npm-user-validate` before version `1.0.1` is vulnerable to a Regular 
Expression Denial of Service (REDos). The regex that validates user emails took exponentially 
longer to process long input strings beginning with `@` characters.<BR><BR>",
    "resourceDetails": {
        "id": 
"/repositories/sample/hello-world/images/sha256:565dba8ce20ca1a311c2d9485089d7ddc935dd50140510050345a1b0ea4ffa6e",
        "source": "Azure"
    },
    "displayName": "Nodejs (npm) Security Update for npm-user-validate (GHSA-xgh6-85xh-479p)",
    "additionalData": {
        "assessedResourceType": "ContainerRegistryVulnerability",
        "vendorReferences": [
            {
                "title": "GHSA-xgh6-85xh-479p",
                "link": "https://github.com/advisories/GHSA-xgh6-85xh-479p"
            }
        ],
        "repositoryName": "sample/hello-world",
        "publishedTime": "2022-03-15T14:43:37.0000000Z",
        "metadata": {
            "isPreview": true
        },
        "registryHost": "asclabcr5m3naxpjixjce.azurecr.io",
        "imageDigest": 
"sha256:565dba8ce20ca1a311c2d9485089d7ddc935dd50140510050345a1b0ea4ffa6e",
        "patchable": true,
        "imageDetails": {
            "osDetails": "Alpine Linux 3.6.2",
            "os": "Linux"
        },
        "cicdData": {
            "status": "Incomplete"
        },

[09:39] Sebastiaan Drinkenburg
       "scanner": "Trivy",
        "type": "Vulnerability",
        "cvss": {
            "2.0": {
                "cvssVectorString": "CVSS:2.0/AV:A/AC:M/Au:M/C:N/I:C/A:P/E:U/RL:OF/RC:C",
                "base": 5.4
            },
            "3.0": {
                "cvssVectorString": 
"CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:L/E:U/RL:O/RC:C",
                "base": 4.2
            }
        },
        "cve": []
    },
    "timeGenerated": "2022-08-22T04:03:54.1840417Z",
    "status": {
        "severity": "Medium",
        "code": "Unhealthy"
    },
    "remediation": "The issue is patched in version 1.0.1 by improving the regular expression 
used and also enforcing a 254 character limit.Workaround:<BR>Restrict the character length to 
a reasonable degree before passing a value to `.emal()`; Also, consider doing a more rigorous 
sanitizing/validation beforehand.\n<P>Patch:<BR>\nFollowing are links for downloading patches 
to fix the vulnerabilities:\n<P> <A HREF=\"https://github.com/advisories/GHSA-xgh6-85xh-479p\" 
TARGET=\"_blank\">GHSA-xgh6-85xh-479p:npm-user-validate</A>",
    "category": "SCA",
    "id": "983258",
    "impact": "The issue affects the `email` function. If you use this function to process 
arbitrary user input with no character limit the application may be susceptible to Denial of 
Service."
}


